#!/bin/sh

# Build (and install) all KDE dependencies
# Modified from the KDE Slackware script by Eric Hameleers <alien@slackware.com>

# Set initial variables:
CWD=$(pwd)
TMP=${TMP:-/tmp}

# Set the config option variables if they are not already set:
[ -r ./alldeps.options ] && . ./alldeps.options

# This avoids compiling a version number into KDE's .la files:
QTDIR=/usr/lib${LIBDIRSUFFIX}/qt ; export QTDIR

ALLDEPS=" \
  cmake \
  extra-cmake-modules \
  harfbuzz \
  qt \
  qt5 \
  soprano \
  akonadi \
  attica \
  shared-desktop-ontologies \
  LibRaw \
  eigen3 \
  orc \
  xapian-core \
  libfakekey \
  OpenAL \
  gstreamer1 \
  gst1-plugins-base \
  gst1-plugins-good \
  qt-gstreamer1 \
  qjson \
  sip \
  PyQt \
  phonon \
  phonon-gstreamer \
  qt-gstreamer \
  strigi \
  libssh \
  qca-qt5 \
  akonadi-qt5 \
  libdbusmenu-qt5 \
  polkit-qt-1 \
  polkit-qt5-1 \
  poppler \
  libepoxy \
  exiv2 \
  "

# Allow for specification of individual packages to be built:
if [ -z "$1" ]; then
  MODQUEUE=$ALLDEPS
else
  MODQUEUE=$*
fi

for module in \
  $MODQUEUE ;
do
  cd $module
  ./$module.SlackBuild
  if [ $? = 0 ]; then
    # Yes, I will build with the fresh packages installed:
    upgradepkg --install-new --reinstall ${TMP}/${module}-*.txz
    # Keep MIME database current:
    /usr/bin/update-mime-database /usr/share/mime 1> /dev/null 2> /dev/null &
    rm -rf ${TMP}/package-${module} ${TMP}/${module}-$VERSION
  else
    echo "${module} failed to build."
    exit 1
  fi
  cd - ;
done

