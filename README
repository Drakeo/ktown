KDE4.12
=======

This is the KDE Software Compilation 4.13.3 for Slackware 14.1
(this was compiled on Slackware 14.1 as promised) !

This release includes version 4.11.11 of the Plasma Workspaces, since the
Workspaces were feature-frozen in 4.11.
KDE SC 4.13.3 is the final increment in the 4.13 series.  The 4.14 series
will be compiled for Slackware-current only.

The upgrade from Slackware 14.1's own 4.10.5 will be trivial.
Five packages outside KDE (the 'deps') need an update: akonadi, attica, libssh,
shared-desktop-ontologies and soprano.  One new dependency was introduced for
KDE 4.12: LibRaw.  Three more were added for KDE 4.13: eigen3, qt-gstreamer
amd xapian-core.

Four KDE packages have been removed since the KDE 4.10.5 of Slackware 14.1:
- kdeadmin, kdetoys, kdesdk and kdenetwork have been split up into smaller
  individual packages since 4.10.5.
Two packages were renamed in 4.12:
- kwallet is now called kwalletmanager.
- kdnssd became zeroconf-ioslave.

In every major release, several new packages are added.  KDE 4.13 is not
different; artikulate, baloo, baloo-widgets, kfilemetadata and kqtquickcharts 
need to be installed using "installpkg" or "upgradepkg --install-new" if you
are running any version of KDE earlier than 4.13.0.
If you have installed the slackpkg+ extension to slackpkg and added my 'ktown'
repository, then "slackpkg install ktown" should show you a list of new
packages to install.

Noteworthy additions since Slackware's KDE are:
- kdeconnect-kde, which is the counterpart of the Andriod application
  kdeconnect-android.  KDE Connect allows your Android smartphone to
  interact with your KDE Desktop.
- baloo, which is the next generation of the nepomuk project.  It's responsible
  for handling user metadata such as tags, rating and comments.
  It also handles indexing and searching for files, emails, contacts, and so on.
  Automatic migration from nepomuk to baloo has been added to KDE 4.13.  
- plasma-nm: you have a choice of NetworkManager GUI now.
  The original 'networkmanagement' widget will ultimately be replaced by
  the new QML based 'plasma-nm' applet.  The packages required for the
  Plasma NetworkManager applet are: libmm-qt, libnm-qt and plasma-nm itself.

NOTE:
About the language packs (KDEI) - for Slackware 32-bit as well as 64-bit:
* KDE localizations (language packs) are available in the "kdei" subdirectory.
  You only need one package (for your own language).

NOTE:
If you decide to install these packages on top of a fresh installation of
  Slackware 14.1 and have excluded all packages in the 'KDE' package series
  during installation, you will be missing several add-on packages, some of
  these are essential to the proper functioning of KDE!
  If you excluded the complete Slackware 14.1 'KDE' series, then you
  will have to install the following essential Slackware 14.1 packages
  at a a minimum:
    * bluedevil
    * polkit-kde-agent-1
    * polkit-kde-kcmodules-1
  And optionally install these as well:
    * amarok
    * k3b
    * kaudiocreator
    * kdevelop-pg-qt
    * kplayer
    * ktorrent
    * libktorrent
    * wicd-kde

NOTE:
Sources and scripts have been separated from the packages in my 'ktown'
  repository starting with KDE 4.9-rc1.  If you want the sources for
  4.13.3, run the following command to download them:

  # rsync -av rsync://alien.slackbook.org/alien/ktown/source/4.13.3 .

Then if you want to compile the KDE packages on your computer, run:
  # cd 4.13.3/kde
  # ./KDE.SlackBuild

Wait a long time, and you will find the new packages in /tmp/kde-build .
Note that these packages will already have been installed by KDE.SlackBuild !

But if all you want is the packages I created, then you can skip all of that.

-------------------------------------------------------------------------------

In order to install or upgrade to KDE 4.13.3, follow these steps:

Make sure you are not running KDE or even X !  If you are running an X session,
log out first, and if you are in runlevel 4 (graphical login) you first have to
go back to runlevel 3 (console) by typing "init 3".

To make it easy for you, here is a one-line command that downloads the whole
4.13.3 directory (excluding the sources), with 32-bit and 64-bit packages
(and be careful of the 'dot' at the end of that command, it is part of the
commandline !!):

  # rsync -av rsync://alien.slackbook.org/alien/ktown/14.1/4.13.3 .

Or else, if you want to download packages for just one of the two supported
architectures, you would run one of the following commands instead (note that
there is a dot at the end of these commands!).

If you want only the 64-bit packages:
  # rsync -av --exclude=x86 rsync://alien.slackbook.org/alien/ktown/14.1/4.13.3 .
If you want only the 32-bit packages:
  # rsync -av --exclude=x86_64 rsync://alien.slackbook.org/alien/ktown/14.1/4.13.3 .

Assuming you just downloaded the bits you want from the directory tree
"4.13.3", you must now change your current directory to where you found this
README (which is the directory called '4.13.3').  If you used one of the
above "rsync" commands then you can simply do:

  # cd 4.13.3

From within this directory, you run the following commands as root (note that
some of the old KDE package names are obsoleted now, they have been split up,
renamed or integrated and that is the reason for the 'removepkg' lines):

  On Slackware 32-bit:
  # upgradepkg --reinstall --install-new x86/deps/*.t?z
  # upgradepkg --reinstall --install-new x86/kde/*.t?z
  # removepkg kdeadmin
  # removepkg kdenetwork
  # removepkg kdesdk
  # removepkg kdetoys
  # removepkg kwallet
  # removepkg kdnssd

  On Slackware 64-bit:
  # upgradepkg --reinstall --install-new x86_64/deps/*.t?z
  # upgradepkg --reinstall --install-new x86_64/kde/*.t?z
  # removepkg kdeadmin
  # removepkg kdenetwork
  # removepkg kdesdk
  # removepkg kdetoys
  # removepkg kwallet
  # removepkg kdnssd

  If you already have one or more non-english language packs installed:
  # upgradepkg x86_64/kdei/*.t?z
  
  If you want to have a non-english language pack installed but none is
  currently installed, substitute your country code instead of the 'XX'
  in the next command:
  # upgradepkg --install-new x86_64/kdei/kde-l10n-XX-*.t?z

  Check if any ".new" configuration files have been left behind by
  the upgradepkg commands.  Compare them to their originals and decide
  if you need to use them.
  # find /etc/ -name "*.new"
  A graphical (ncurses) tool for processing these "*.new" files is slackpkg:
  # slackpkg new-config

Then reboot your system.

==============================================================================
                     Eric Hameleers / alien at slackware dot com / 23-aug-2014

