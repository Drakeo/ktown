KDE5
====

Here is KDE 5_16.11 for Slackware, consisting of the KDE Frameworks 5.27.0,
Plasma 5.8.3 and Applications 16.08.2 on top of Qt 5.7.0.

Upgrading from the previous 5_16.08 should be straight-forward.
KDE-5_16.11 is meant to be installed on top of Slackware 14.2 or -current.
It will *replace* any version of KDE 4 you might have installed!

What is the NEWS in this batch of updates:
- Frameworks 5.27.0 is an enhancement release.
  See https://www.kde.org/announcements/kde-frameworks-5.27.0.php
- Plasma 5.8.3 is an incremental bug fix release for the 5.8 series.
  Note that this is the first Plasma 5.8 that goes into my 'ktown' packages
  as you will notice straight away when starting a Plasma session. There is
  a new 'loading' animation again.
  Plasma 5.8 is labeled a Long Term Support (LTS) release.  In part this
  has been done because the developers think that 5.8 marks the point where
  users who loved KDE 4 and turned away from Plasma 5 should re-evaluate
  this desktop environment and hopefully want to stay.
  The 5.8 LTS release should work with Qt 5.6.1 but I think it is better
  to stick with the Qt 5.7 which I already used for the previous 'ktown'
  iteration.
  See https://www.kde.org/announcements/plasma-5.8.3.php and if you want
  to know more about the LTS, go read:
  https://www.kde.org/announcements/plasma-5.8.0.php
- Applications 16.08.2 is a maintenance upgrade.
  See https://www.kde.org/announcements/announce-applications-16.08.2.php .
- Upgrades for kdeconnect and sddm can be found in the 'plasma-extra'
  subdirectory, while a newer skanlite can be found in 'applications-extra'.

Further points of interest:
- There are a couple of *runtime* dependencies that I did not add to the
  ktown repository, but you may want to consider installing them yourself:
  * vlc - will give phonon another backend to select from.
  * python-twisted - required by kajongg to start & run.
  * freerdp: access RDP servers through krdc.
  All of these can be found in my regular package repository.
- kde/kde4-extragear packages should be taken from slackware 14.2 or -current
  (calligra, k3b, kaudiocreator, kplayer, kwebkitpart, oxygen-gtk2).
- Lots of packages in the 'deps' department are completely new to Slackware.
  Since KDE 5 aka Plasma 5 is built on Qt5 (KDE 4 uses Qt4 as its base)
  you'll find many Qt5 related packages.  Also, in order for Qt4 and GTK based
  applications to dock into the Plasma 5 system tray, more dependencies were
  needed.  So, apart from updates to regular Slackware packages and the
  new telepathy support packages (see below), these are the new ones:
  OpenAL, PyQT5, cfitsio, grantlee-qt4, json-glib, libappindicator,
  libdbusmenu-gtk, libdbusmenu-qt5, libindicator, libinput, libxkbcommon,
  lmdb, hack-font-ttf, ninja, noto-font-ttf, noto-cjk-font-ttf, polkit-qt5-1,
  qca-qt5, qt-gstreamer, qt5, qt5-webkit, sni-qt and wayland.
  The phonon package was extended so that it now supports both Qt4 and Qt5.
- A completely new subset of "deps" packages, contained in their own
  "telepathy" subdirectory, needed for KDE Telepathy:
  libotr, libnice, farstream, libaccounts-glib, libaccounts-qt5,
  signon, signon-plugin-oauth2, signon-ui, libsignon-glib,
  telepathy-glib, telepathy-farstream, telepathy-haze, telepathy-gabble,
  telepathy-qt5, telepathy-logger, telepathy-logger-qt5,
  telepathy-mission-control and telepathy-accounts-signon.
- Telepathy for KDE packages are found in their own subdirectory kde/telepathy .
- Also worth mentioning: the KF5 ports of ktorrent and skanlite can be found 
  in the applications-extra directory.  And kjots, previously contained in
  KDEPIM, is separated into its own package in the kde/applications directory.

NOTE:
Also explained in more detail below, upgrading to this KDE 5 is non-trivial.
You will have to remove old KDE 4 packages manually.  If you do not have KDE
installed at all, you will have to *install* some of Slackware's own KDE 4
packages manually.

NOTE:
If you decide to install these packages on top of a fresh installation of
  Slackware 14.2 or -current and have excluded all packages in the 'KDE'
  package series during installation, you will be missing several add-on
  packages, some of these are essential to the proper functioning of KDE!
  If you excluded the complete Slackware 'KDE' series, then you
  can optionally install these Slackware packages as well:
    * amarok
    * calligra
    * k3b
    * kaudiocreator
    * kplayer
    * kwebkitpart
    * oxygen-gtk2

NOTE:
If you had installed KDE 4 previously as your default desktop, the removal
of KDE 4 packages will break the symbolic link '/etc/X11/xinit/xinitrc'.
An attempt to run 'startx' in a console will fail with a black screen.
After installing Plasma 5 for the first time, you need to run 'xwmconfig'
and select 'xinitrc.plasma' as your desktop session.

-------------------------------------------------------------------------------
Install pre-compiled packages:
-------------------------------------------------------------------------------

In order to install or upgrade KDE 5, follow these steps:

Make sure you are not running KDE or even X !  If you are running an X session,
log out first, and if you are in runlevel 4 (graphical login) you first have to
go back to runlevel 3 (console) by typing "init 3".

If you still have a KDE 4 installed, it must be removed first. No clean
upgrade path can be provided!  Do as follows:

If you have Slackware 14.2 or -current's default KDE 4.14.3 installed:
  # removepkg /var/log/packages/*-4.14.3-*
  # removepkg libkscreen
  # removepkg kscreen
  # removepkg kactivities
  # removepkg kde-workspace
  # removepkg libmm-qt
  # removepkg libnm-qt
  # removepkg plasma-nm
  # removepkg polkit-kde-agent-1
  # removepkg polkit-kde-kcmodules-1
  # removepkg kdeconnect-kde
  # removepkg kdepimlibs
  ..or instead of the above, simply '# slackpkg remove kde' and de-select
  the packages you want to keep (amarok, calligra, k3b etc).

If you have my 'ktown' set of KDE 5_16.08 installed:
- No further actions are needed.

If you have my 'ktown' set of KDE 5_16.07 installed:
- Upgrade to KDE 5_16.08
  Remove the packages that no longer exist in KDE 5_16.07:
  * removepkg kdegraphics-strigi-analyzer
  * removepkg kdenetwork-strigi-analyzers
  * rempovepkg kdesdk-strigi-analyzers
  * removepkg kdepimlibs libkdeedu mplayerthumbs

If you have my 'ktown' set of KDE 5_16.06 installed:
- Upgrade to KDE 5_16.07
  Remove the packages that no longer exist in KDE 5_16.07:
  * removepkg /var/log/packages/noto-font-ttf-2015-09-29-noarch-1alien

If you have my 'ktown' set of KDE 5_16.05 installed:
- No further actions are needed.

If you have my 'ktown' set of KDE 5_16.04 installed:
- No further actions are needed.

If you have my 'ktown' set of KDE 5_16.03 installed:
- Upgrade to KDE 5_16.04
  Remove the packages that no longer exist in KDE 5_16.04:
  * removepkg kactivities-workspace

If you have my 'ktown' set of KDE 5_16.02 installed:
- No further actions are needed.

If you have my 'ktown' set of KDE 5_16.01 installed:
- No further actions are needed.

Then proceed with installing/upgrading KDE 5 as outlined below.

To make it easy for you, here is a one-line command that downloads the whole
'5' directory (excluding the sources), with 32-bit and 64-bit packages
(and be careful of the 'dot' at the end of that command, it is part of the
commandline !!):

  # rsync -av rsync://alien.slackbook.org/alien/ktown/current/5 .

Or else, if you want to download packages for just one of the two supported
architectures, you would run one of the following commands instead (note that
there is a dot at the end of these commands!).

If you want only the 64-bit packages:
  # rsync -av --exclude=x86 rsync://alien.slackbook.org/alien/ktown/current/5 .
If you want only the 32-bit packages:
  # rsync -av --exclude=x86_64 rsync://alien.slackbook.org/alien/ktown/current/5 .

Assuming you just downloaded the bits you want from the directory tree
"5", you must now change your current directory to where you found this
README (which is the directory called '5').  If you used one of the
above "rsync" commands then you can simply do:

  # cd 5

From within this directory, you run the following commands as root (note that
some of the old KDE package names are obsoleted now, they have been split up,
renamed or integrated and that is the reason for the 'removepkg' lines):

  On Slackware 32-bit:
  # upgradepkg --reinstall --install-new x86/deps/*.t?z
  # upgradepkg --reinstall --install-new x86/deps/telepathy/*.t?z
  # upgradepkg --reinstall --install-new x86/kde/*/*.t?z

  On Slackware 64-bit:
  # upgradepkg --reinstall --install-new x86_64/deps/*.t?z
  # upgradepkg --reinstall --install-new x86_64/deps/telepathy/*.t?z
  # upgradepkg --reinstall --install-new x86_64/kde/*/*.t?z

  If you already have one or more non-english language packs installed:

  On Slackware 32-bit:
  # upgradepkg x86/kdei/*.t?z

  On Slackware 64-bit:
  # upgradepkg x86_64/kdei/*.t?z
  
  If you want to have a non-english language pack installed but none is
  currently installed, substitute your country code instead of the 'XX'
  in the next command:
  # upgradepkg --install-new x86_64/kdei/kde-l10n-XX-*.t?z

  Check if any ".new" configuration files have been left behind by
  the upgradepkg commands.  Compare them to their originals and decide
  if you need to use them.
  # find /etc/ -name "*.new"
  A graphical (ncurses) tool for processing these "*.new" files is slackpkg:
  # slackpkg new-config

Then reboot your system.

If all you want is to install the packages I created, then you can skip the
remainder of the README which details how to (re)compile the packages from
their sources; it is not required reading material.

-------------------------------------------------------------------------------
Building it all from source:
-------------------------------------------------------------------------------

Sources and scripts are separated from the packages in my 'ktown' repository.
If you want the sources for KDE 5, run the following command to download them:

  # rsync -av rsync://alien.slackbook.org/alien/ktown/source/5 .

There are a lot of 'dependencies' for KDE 5 which you'll have to compile and
install before attempting to compile KDE 5. Compiling and installing these
dependencies on Slackware-current is as easy as:
  # cd 5/deps
  # ./updates.SlackBuild
  # cd -

Be prepared to wait a *long* time since this will compile a new Qt5 package
among others.  The finished package will be stored in /tmp .

Then if you want to compile the KDE packages on your computer, run:
  # cd 5/kde
  # ./KDE.SlackBuild

Wait a long time, and you will find the new packages in /tmp/kde-build .
Note that these packages will already have been installed by KDE.SlackBuild !

==============================================================================
                     Eric Hameleers / alien at slackware dot com / 09-nov-2016
