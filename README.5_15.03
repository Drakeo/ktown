KDE5
====

This is KDE 5_15.03 for Slackware, consisting of the KDE Frameworks 5.8.0,
Plasma 5.2.2 and Applications 14.12.3.
This is meant only to be installed on top of Slackware -current and it will
*replace* any version of KDE 4 you migh thave installed!

Plasma 5 is the next generation of KDE's desktop workspace.
Plasma 5 improves support for high-DPI displays and comes with a "converged
shell", i.e. one Plasma codebase for different target devices.  Plasma 5 uses
a new fully hardware-accelerated OpenGL(ES) graphics stack.  Plasma 5 is built
using Qt 5 and Frameworks 5.
And with the Breeze themed artwork and its own Oxygen font, this desktop looks
clean and modern.

New & changed since my KDE 5_15.02_02 release:
- kde/frameworks packages were updated to 5..8.0. Two new Frameworks were added:
  + KPeople, provides access to all contacts and the people who hold them
  + KXmlRpcClient, interaction with XMLRPC services
  See also https://www.kde.org/announcements/kde-frameworks-5.8.0.php
- kde/plasma packages were updated to 5.2.2. This is a bugfix release, see also
  https://www.kde.org/announcements/plasma-5.2.2.php
- kde/applications packages were updated to 14.12.03. This is a bugfix release,
  see also https://www.kde.org/announcements/announce-applications-14.12.3.php
- kde/kde4, new versions of kdelibs, kdepim*
- kde/kde4-extragear has a new version 2.9.1 of the Calligra office suite.
- deps directory has two updates to Slackware packages (libwpd and grantlee)
  which are required by the new versions of calligra and kdepim respectively;
  and two new packages: librevenge and libodfgen (both are required for the
  new release of libwpd)

Further points of interest that are unchanged since the previous release:
- all "extragear" packages that went missing between KDE 4.14.3 and 5_15.01
  like k3b, kdevelop etc, have been re-added
- katepart4 was added so that kdevelop works again
- konsolepart4 was added to be able to use an embedded konsole in dolphin
- sddm-theme-breeze was removed, the theme is now part of plasma-workspace
- Lots of packages in the 'deps' department which are completely new to
  Slackware. Since KDE 5 is built on Qt5 (KDE 4 had Qt4 as its base) you'll
  find many Qt5 related packages. Also, in order for Qt4 and GTK based
  applications to dock into the Plasma 5 system tray, more dependencies were
  needed. So, apart from updates to regular Slackware packages, these are the
  new ones:
  LibRaw, OpenAL, akonadi-qt5, eigen3, gst1-plugins-base, gst1-plugins-good,
  gstreamer1, json-glib, libappindicator, libdbusmenu-gtk, libdbusmenu-qt5,
  libepoxy, libfakekey, libindicator, orc, polkit-qt5-1, qca-qt5, qt-gstreamer,
  qt-gstreamer1, qt5, sni-qt, wayland and xapian-core.
- Note for users of multilib Slackware64 and also using Skype: you will have to
  grab the 32-bit version of sni-qt and run 'convertpkg-compat32' on it,
  or else Skype won't be able to dock its icon in the systray.
- A bit sneakily, I built phonon-vlc for you.  You will also need a VLC package
  to be able to use this package though.
- Several source tarballs in Plasma 5.2.0 have not been compiled to Slackware
  packages: libbluedevil and bluedevil (they need BlueZ 5 which is not part of
  Slackware), muon (a debian/ubuntu package manager), libkface (needs opencv
  which I was not willing to add as a dependency).
- One dependency which you'll probably find curious, is wayland. It is required
  in order to *compile* KWin's X11 driver, but it is apparently not needed at
  *runtime*. Nevertheless, I left the package in, just in case you want or need
  to recompile kwin (actually, it does not seem required any longer, but that
  issue will be revisited on next Plasma update).
- Graphical login: KDM has been replaced with SDDM.
  If you want to see the new graphical session (login) manager SDDM in action,
  add the following lines to the Slackware file "/etc/rc.d/rc.4" right after
  the line: echo "Starting up X11 session manager..."

# --- 8< --------------------------------------
if [ -x /usr/bin/sddm ]; then
  exec /usr/bin/sddm
fi
# --- 8< --------------------------------------

... and then switch to runlevel 4 by typing (at the root prompt):

  # init 4

Select "Plasma" from the SDDM session dropdown.
Alternatively, if you prefer good old runlevel 3, you can type (at your own
user account's command prompt):

  $ xwmconfig

... and select "xinitrc.plasma" as your default window manager for X.
Then run:

  $ startx

NOTE:
Also explained in more detail below, upgrading to this KDE 5 is non-trivial.
You will have to remove old KDE packages manually.  If you do not have KDE
installed at all, you will have to *install* some of Slackware's own KDE
packages manually.

NOTE:
If you decide to install these packages on top of a fresh installation of
  Slackware-current and have excluded all packages in the 'KDE' package series
  during installation, you will be missing several add-on packages, some of
  these are essential to the proper functioning of KDE!
  If you excluded the complete Slackware-current 'KDE' series, then you
  will have to install the following essential Slackware-current packages
  at a a minimum:
    * bluedevil
    * polkit-kde-agent-1
    * polkit-kde-kcmodules-1
  And optionally install these as well:
    * amarok
    * kaudiocreator
    * kdevelop-pg-qt
    * kplayer
    * ktorrent
    * libktorrent

-------------------------------------------------------------------------------
Building it all from source:
-------------------------------------------------------------------------------

Sources and scripts are separated from the packages in my 'ktown' repository.
If you want the sources for KDE 5, run the following command to download them:

  # rsync -av rsync://alien.slackbook.org/alien/ktown/source/5 .

There are a lot of 'dependencies' for KDE 5 which you'll have to compile and
install before attempting to compile KDE 5. Compiling and installing these
dependencies on Slackware-current is as easy as:
  # cd 5/deps
  # ./updates.SlackBuild
  # cd -

Be prepared to wait a *long* time since this will recompile Qt4 and compile a
new Qt5 package among others.  The finished package will be stored in /tmp .
Then if you want to compile the KDE packages on your computer, run:
  # cd 5/kde
  # ./KDE.SlackBuild

Wait a long time, and you will find the new packages in /tmp/kde-build .
Note that these packages will already have been installed by KDE.SlackBuild !

But if all you want is the packages I created, then you can skip all of that.

-------------------------------------------------------------------------------
Install pre-compiled packages:
-------------------------------------------------------------------------------

In order to install or upgrade KDE 5, follow these steps:

Make sure you are not running KDE or even X !  If you are running an X session,
log out first, and if you are in runlevel 4 (graphical login) you first have to
go back to runlevel 3 (console) by typing "init 3".

If you still have a KDE 4 installed, it must be removed first. No clean
upgrade path can be provided!  Do as follows:

If you have Slackware's default KDE 4.10.5 installed:
  # removepkg /var/log/packages/*-4.10.5-*
  # removepkg libkscreen
  # removepkg kscreen

If you have my 'ktown' set of KDE 4.14.3 installed:
  # removepkg /var/log/packages/*-4.14.3-*alien
  # removepkg libkscreen
  # removepkg kscreen
  # removepkg kde-workspace
  # removepkg libmm-qt
  # removepkg plasma-nm
  # removepkg kdeconnect-kde

If you have my 'ktown_preview' set of KDE 5.0.2 installed as well:
  # removepkg /var/log/packages/*-5.0.2-*alien
  # removepkg /var/log/packages/*-5.2.0-*alien
  # removepkg kscreen2 libkscreen2 libmm-qt5 libnm-qt5 oxygen-fonts sddm

If you have my 'ktown' set of KDE 5_15.01 installed:
  # removepkg /var/log/packages/sddm-theme-breeze

If you have my 'ktown' set of KDE 5_15.02 or 5_15.02_02 installed:
  There is nothing you need to do right now.

Then proceed with installing/upgrading KDE 5 as outlined below.

To make it easy for you, here is a one-line command that downloads the whole
'5' directory (excluding the sources), with 32-bit and 64-bit packages
(and be careful of the 'dot' at the end of that command, it is part of the
commandline !!):

  # rsync -av rsync://alien.slackbook.org/alien/ktown/current/5 .

Or else, if you want to download packages for just one of the two supported
architectures, you would run one of the following commands instead (note that
there is a dot at the end of these commands!).

If you want only the 64-bit packages:
  # rsync -av --exclude=x86 rsync://alien.slackbook.org/alien/ktown/current/5 .
If you want only the 32-bit packages:
  # rsync -av --exclude=x86_64 rsync://alien.slackbook.org/alien/ktown/current/5 .

Assuming you just downloaded the bits you want from the directory tree
"5", you must now change your current directory to where you found this
README (which is the directory called '5').  If you used one of the
above "rsync" commands then you can simply do:

  # cd 5

From within this directory, you run the following commands as root (note that
some of the old KDE package names are obsoleted now, they have been split up,
renamed or integrated and that is the reason for the 'removepkg' lines):

  On Slackware 32-bit:
  # upgradepkg --reinstall --install-new x86/deps/*.t?z
  # upgradepkg --reinstall --install-new x86/kde/*/*.t?z

  On Slackware 64-bit:
  # upgradepkg --reinstall --install-new x86_64/deps/*.t?z
  # upgradepkg --reinstall --install-new x86_64/kde/*/*.t?z

  If you already have one or more non-english language packs installed:

  On Slackware 32-bit:
  # upgradepkg x86/kdei/*.t?z

  On Slackware 64-bit:
  # upgradepkg x86_64/kdei/*.t?z
  
  If you want to have a non-english language pack installed but none is
  currently installed, substitute your country code instead of the 'XX'
  in the next command:
  # upgradepkg --install-new x86_64/kdei/kde-l10n-XX-*.t?z

  Check if any ".new" configuration files have been left behind by
  the upgradepkg commands.  Compare them to their originals and decide
  if you need to use them.
  # find /etc/ -name "*.new"
  A graphical (ncurses) tool for processing these "*.new" files is slackpkg:
  # slackpkg new-config

Then reboot your system.

==============================================================================
                     Eric Hameleers / alien at slackware dot com / 28-mar-2015

