KDE5
====

This is the testing ground for Slackware, of the KDE Frameworks 5.2.0 combined
with Plasma 5.0.2.
This is only useful if installed on top of Slackware -current and my KDE 4.14
packages (plus dependencies).  KDE5 is still a work in progress and needs the
KDE4 applications, libraries and artwork.

Plasma 5.0 is the next generation of KDE's desktop workspace.
Plasma 5.0 improves support for high-DPI displays and comes with a "converged
shell", i.e. one Plasma codebase for different target devices.  Plasma 5 uses
a new fully hardware-accelerated OpenGL(ES)graphics stack.  Plasma 5 is built
using Qt 5 and Frameworks 5.
And with the Breeze themed artwork and its own Oxygen font, this desktop looks
clean and modern.

Note that you need to install KDE5 plus dependencies on top of an existing
installation of KDE4 plus dependencies.  Do not swap that install order!

If you want to see the new graphical session (login) manager SDDM in action,
add the following lines to the Slackware file "/etc/rc.d/rc.4" right after
the line: echo "Starting up X11 session manager..."

# --- 8< --------------------------------------
if [ -x /usr/bin/sddm ]; then
  exec /usr/bin/sddm
fi
# --- 8< --------------------------------------

... and then switch to runlevel 4 by typing:

  # init 4

Select "KDE Plasma 5" from the SDDM session dropdown.
Alternatively, if you prefer good old runlevel 3, you can type:

  $ xwmconfig

... and select "xinitrc.plasma" as your default window manager for X.
Then run:

  $ startx

-------------------------------------------------------------------------------

Sources and scripts are separated from the packages in my 'ktown' repository
starting with KDE 4.9-rc1.  If you want the sources for this KDE5 preview,
run the following command to download them:

  # rsync -av rsync://alien.slackbook.org/alien/ktown/source/5 .

Then if you want to compile the KDE packages on your computer, run:
  # cd 5/kde
  # ./KDE.SlackBuild

Wait a long time, and you will find the new packages in /tmp/kde-build .
Note that these packages will already have been installed by KDE.SlackBuild !

But if all you want is the packages I created, then you can skip all of that.

-------------------------------------------------------------------------------

In order to install or upgrade KDE5, follow these steps:

Make sure you are not running KDE or even X !  If you are running an X session,
log out first, and if you are in runlevel 4 (graphical login) you first have to
go back to runlevel 3 (console) by typing "init 3".

To make it easy for you, here is a one-line command that downloads the whole
'5' directory (excluding the sources), with 32-bit and 64-bit packages
(and be careful of the 'dot' at the end of that command, it is part of the
commandline !!):

  # rsync -av rsync://alien.slackbook.org/alien/ktown/current/5 .

Or else, if you want to download packages for just one of the two supported
architectures, you would run one of the following commands instead (note that
there is a dot at the end of these commands!).

If you want only the 64-bit packages:
  # rsync -av --exclude=x86 rsync://alien.slackbook.org/alien/ktown/current/5 .
If you want only the 32-bit packages:
  # rsync -av --exclude=x86_64 rsync://alien.slackbook.org/alien/ktown/current/5 .

Assuming you just downloaded the bits you want from the directory tree
"5", you must now change your current directory to where you found this
README (which is the directory called '5').  If you used one of the
above "rsync" commands then you can simply do:

  # cd 5

From within this directory, you run the following commands as root (note that
some of the old KDE package names are obsoleted now, they have been split up,
renamed or integrated and that is the reason for the 'removepkg' lines):

  On Slackware 32-bit:
  # upgradepkg --reinstall --install-new x86/deps/*.t?z
  # upgradepkg --reinstall --install-new x86/kde/*/*.t?z

  On Slackware 64-bit:
  # upgradepkg --reinstall --install-new x86_64/deps/*.t?z
  # upgradepkg --reinstall --install-new x86_64/kde/*/*.t?z

  No separate language packs are included with this preview!
  
  Check if any ".new" configuration files have been left behind by
  the upgradepkg commands.  Compare them to their originals and decide
  if you need to use them.
  # find /etc/ -name "*.new"
  A graphical (ncurses) tool for processing these "*.new" files is slackpkg:
  # slackpkg new-config

Then reboot your system.

==============================================================================
                     Eric Hameleers / alien at slackware dot com / 16-sep-2014

